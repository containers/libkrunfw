From 2b3f8ccfb19e97f1ac92c1c1c7525ddac4477c52 Mon Sep 17 00:00:00 2001
From: Sergio Lopez <slp@redhat.com>
Date: Thu, 2 Mar 2023 07:34:49 +0100
Subject: [PATCH 01/21] krunfw: Don't panic when init dies

In libkrun, the isolated process runs as PID 1. When it exits,
trigger an orderly reboot instead of panic'ing.

Also, silence reboot messages for the moment. Eventually we should
play with the printk levels instead.

Signed-off-by: Sergio Lopez <slp@redhat.com>
---
 kernel/exit.c   | 6 ++++++
 kernel/reboot.c | 2 ++
 2 files changed, 8 insertions(+)

diff --git a/kernel/exit.c b/kernel/exit.c
index 56b8bd9487b4..6e65dcb5f9dd 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -69,6 +69,8 @@
 #include <linux/rethook.h>
 #include <linux/sysfs.h>
 #include <linux/user_events.h>
+#include <linux/reboot.h>
+
 #include <linux/uaccess.h>
 
 #include <uapi/linux/wait.h>
@@ -905,8 +907,12 @@ void __noreturn do_exit(long code)
 		 * immediately to get a useable coredump.
 		 */
 		if (unlikely(is_global_init(tsk)))
+#ifdef VERBOSE_LIBKRUN
 			panic("Attempted to kill init! exitcode=0x%08x\n",
 				tsk->signal->group_exit_code ?: (int)code);
+#else
+            orderly_reboot();
+#endif
 
 #ifdef CONFIG_POSIX_TIMERS
 		hrtimer_cancel(&tsk->signal->real_timer);
diff --git a/kernel/reboot.c b/kernel/reboot.c
index d6ee090eda94..f6947c5bd671 100644
--- a/kernel/reboot.c
+++ b/kernel/reboot.c
@@ -278,10 +278,12 @@ void kernel_restart(char *cmd)
 	do_kernel_restart_prepare();
 	migrate_to_reboot_cpu();
 	syscore_shutdown();
+#ifdef VERBOSE_LIBKRUN
 	if (!cmd)
 		pr_emerg("Restarting system\n");
 	else
 		pr_emerg("Restarting system with command '%s'\n", cmd);
+#endif
 	kmsg_dump(KMSG_DUMP_SHUTDOWN);
 	machine_restart(cmd);
 }
-- 
2.49.0

