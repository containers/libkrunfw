From b20bfe45b87990231d222cb88a88dcbf19c8bdac Mon Sep 17 00:00:00 2001
From: Sergio Lopez <slp@redhat.com>
Date: Mon, 16 May 2022 15:47:50 +0200
Subject: [PATCH 01/15] krunfw: Don't panic when init dies

In libkrun, the isolated process runs as PID 1. When it exits,
trigger an orderly reboot instead of panic'ing.

Also, silence reboot messages for the moment. Eventually we should
play with the printk levels instead.

Signed-off-by: Sergio Lopez <slp@redhat.com>
---
 kernel/exit.c   | 5 +++++
 kernel/reboot.c | 2 ++
 2 files changed, 7 insertions(+)

diff --git a/kernel/exit.c b/kernel/exit.c
index 35e0a31a0315..5bd5d63fed88 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -67,6 +67,7 @@
 #include <linux/io_uring.h>
 #include <linux/kprobes.h>
 #include <linux/rethook.h>
+#include <linux/reboot.h>
 
 #include <linux/uaccess.h>
 #include <asm/unistd.h>
@@ -786,8 +787,12 @@ void __noreturn do_exit(long code)
 		 * immediately to get a useable coredump.
 		 */
 		if (unlikely(is_global_init(tsk)))
+#ifdef VERBOSE_LIBKRUN
 			panic("Attempted to kill init! exitcode=0x%08x\n",
 				tsk->signal->group_exit_code ?: (int)code);
+#else
+            orderly_reboot();
+#endif
 
 #ifdef CONFIG_POSIX_TIMERS
 		hrtimer_cancel(&tsk->signal->real_timer);
diff --git a/kernel/reboot.c b/kernel/reboot.c
index 3bba88c7ffc6..a08a8a9b4d88 100644
--- a/kernel/reboot.c
+++ b/kernel/reboot.c
@@ -268,10 +268,12 @@ void kernel_restart(char *cmd)
 	do_kernel_restart_prepare();
 	migrate_to_reboot_cpu();
 	syscore_shutdown();
+#ifdef VERBOSE_LIBKRUN
 	if (!cmd)
 		pr_emerg("Restarting system\n");
 	else
 		pr_emerg("Restarting system with command '%s'\n", cmd);
+#endif
 	kmsg_dump(KMSG_DUMP_SHUTDOWN);
 	machine_restart(cmd);
 }
-- 
2.39.0

